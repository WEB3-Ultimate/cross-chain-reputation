{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProviderNotInitializedException = exports.ProviderNotFoundException = exports.ProviderRpcClient = exports.hasEverscaleProvider = exports.mergeTransactions = exports.AddressLiteral = exports.Address = exports.Subscriber = void 0;\n\nconst models_1 = require(\"./models\");\n\nconst utils_1 = require(\"./utils\");\n\nconst subscriber = __importStar(require(\"./stream\"));\n\nconst contract = __importStar(require(\"./contract\"));\n\n__exportStar(require(\"./api\"), exports);\n\n__exportStar(require(\"./models\"), exports);\n\n__exportStar(require(\"./contract\"), exports);\n\nvar stream_1 = require(\"./stream\");\n\nObject.defineProperty(exports, \"Subscriber\", {\n  enumerable: true,\n  get: function () {\n    return stream_1.Subscriber;\n  }\n});\n\nvar utils_2 = require(\"./utils\");\n\nObject.defineProperty(exports, \"Address\", {\n  enumerable: true,\n  get: function () {\n    return utils_2.Address;\n  }\n});\nObject.defineProperty(exports, \"AddressLiteral\", {\n  enumerable: true,\n  get: function () {\n    return utils_2.AddressLiteral;\n  }\n});\nObject.defineProperty(exports, \"mergeTransactions\", {\n  enumerable: true,\n  get: function () {\n    return utils_2.mergeTransactions;\n  }\n});\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nlet ensurePageLoaded;\n\nif (!isBrowser || document.readyState == 'complete') {\n  ensurePageLoaded = Promise.resolve();\n} else {\n  ensurePageLoaded = new Promise(resolve => {\n    window.addEventListener('load', () => {\n      resolve();\n    });\n  });\n}\n\nconst getProvider = () => isBrowser ? window.__ever || window.ton : undefined;\n/**\n * @category Provider\n */\n\n\nasync function hasEverscaleProvider() {\n  if (!isBrowser) {\n    return false;\n  }\n\n  await ensurePageLoaded;\n  return window.__hasEverscaleProvider === true || window.hasTonProvider === true;\n}\n\nexports.hasEverscaleProvider = hasEverscaleProvider;\n/**\n * @category Provider\n */\n\nclass ProviderRpcClient {\n  constructor() {\n    let properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._subscriptions = {};\n    this._contractSubscriptions = {};\n    this._properties = properties;\n    const self = this; // Create contract proxy type\n\n    class ProviderContract extends contract.Contract {\n      constructor(abi, address) {\n        super(self, abi, address);\n      }\n\n    }\n\n    this.Contract = ProviderContract; // Create subscriber proxy type\n\n    class ProviderSubscriber extends subscriber.Subscriber {\n      constructor() {\n        super(self);\n      }\n\n    }\n\n    this.Subscriber = ProviderSubscriber; // Wrap provider requests\n\n    this._api = new Proxy({}, {\n      get: (_object, method) => params => {\n        if (this._provider != null) {\n          return this._provider.request({\n            method,\n            params: params\n          });\n        } else {\n          throw new ProviderNotInitializedException();\n        }\n      }\n    });\n\n    if (properties.forceUseFallback === true) {\n      this._initializationPromise = properties.fallback != null ? properties.fallback().then(provider => {\n        this._provider = provider;\n      }) : Promise.resolve();\n    } else {\n      // Initialize provider with injected object by default\n      this._provider = getProvider();\n\n      if (this._provider != null) {\n        // Provider as already injected\n        this._initializationPromise = Promise.resolve();\n      } else {\n        // Wait until page is loaded and initialization complete\n        this._initializationPromise = hasEverscaleProvider().then(hasProvider => new Promise(resolve => {\n          if (!hasProvider) {\n            // Fully loaded page doesn't even contain provider flag\n            return resolve();\n          } // Wait injected provider initialization otherwise\n\n\n          this._provider = getProvider();\n\n          if (this._provider != null) {\n            resolve();\n          } else {\n            const eventName = window.__hasEverscaleProvider === true ? 'ever#initialized' : 'ton#initialized';\n            window.addEventListener(eventName, _data => {\n              this._provider = getProvider();\n              resolve();\n            });\n          }\n        })).then(async () => {\n          if (this._provider == null && properties.fallback != null) {\n            this._provider = await properties.fallback();\n          }\n        });\n      }\n    } // Will only register handlers for successfully loaded injected provider\n\n\n    this._initializationPromise.then(() => {\n      if (this._provider != null) {\n        this._registerEventHandlers(this._provider);\n      }\n    });\n  }\n  /**\n   * Checks whether this page has injected Everscale provider or\n   * there is a fallback provider.\n   */\n\n\n  async hasProvider() {\n    if (this._properties.fallback != null) {\n      return true;\n    }\n\n    return hasEverscaleProvider();\n  }\n  /**\n   * Waits until provider api will be available. Calls `fallback` if no provider was found\n   *\n   * @throws ProviderNotFoundException when no provider found\n   */\n\n\n  async ensureInitialized() {\n    await this._initializationPromise;\n\n    if (this._provider == null) {\n      throw new ProviderNotFoundException();\n    }\n  }\n  /**\n   * Whether provider api is ready\n   */\n\n\n  get isInitialized() {\n    return this._provider != null;\n  }\n  /**\n   * Raw provider\n   */\n\n\n  get raw() {\n    if (this._provider != null) {\n      return this._provider;\n    } else {\n      throw new ProviderNotInitializedException();\n    }\n  }\n  /**\n   * Raw provider api\n   */\n\n\n  get rawApi() {\n    return this._api;\n  }\n  /**\n   * Creates typed contract wrapper.\n   *\n   * @param abi Readonly object (must be declared with `as const`)\n   * @param address Default contract address\n   *\n   * @deprecated `new ever.Contract(abi, address)` should be used instead\n   */\n\n\n  createContract(abi, address) {\n    return new this.Contract(abi, address);\n  }\n  /**\n   * Creates subscriptions group\n   *\n   * @deprecated `new ever.Subscriber()` should be used instead\n   */\n\n\n  createSubscriber() {\n    return new this.Subscriber();\n  }\n  /**\n   * Requests new permissions for current origin.\n   * Shows an approval window to the user.\n   * Will overwrite already existing permissions\n   *\n   * ---\n   * Required permissions: none\n   */\n\n\n  async requestPermissions(args) {\n    await this.ensureInitialized();\n    const result = await this._api.requestPermissions({\n      permissions: args.permissions\n    });\n    return (0, models_1.parsePermissions)(result);\n  }\n  /**\n   * Updates `accountInteraction` permission value\n   *\n   * ---\n   * Requires permissions: `accountInteraction`\n   */\n\n\n  async changeAccount() {\n    await this.ensureInitialized();\n    await this._api.changeAccount();\n  }\n  /**\n   * Removes all permissions for current origin and stops all subscriptions\n   */\n\n\n  async disconnect() {\n    await this.ensureInitialized();\n    await this._api.disconnect();\n  }\n\n  async subscribe(eventName, params) {\n    class SubscriptionImpl {\n      constructor(_subscribe, _unsubscribe) {\n        this._subscribe = _subscribe;\n        this._unsubscribe = _unsubscribe;\n        this._listeners = {\n          ['data']: [],\n          ['subscribed']: [],\n          ['unsubscribed']: []\n        };\n        this._subscribed = false;\n\n        this.subscribe = async () => {\n          if (this._subscribed) {\n            return;\n          }\n\n          this._subscribed = true;\n          await this._subscribe(this);\n\n          for (const handler of this._listeners['subscribed']) {\n            handler();\n          }\n        };\n\n        this.unsubscribe = async () => {\n          if (!this._subscribed) {\n            return;\n          }\n\n          this._subscribed = false;\n          await this._unsubscribe();\n\n          for (const handler of this._listeners['unsubscribed']) {\n            handler();\n          }\n        };\n      }\n\n      on(eventName, listener) {\n        this._listeners[eventName].push(listener);\n\n        return this;\n      }\n\n      notify(data) {\n        for (const handler of this._listeners['data']) {\n          handler(data);\n        }\n      }\n\n    }\n\n    let existingSubscriptions = this._getEventSubscriptions(eventName);\n\n    const id = (0, utils_1.getUniqueId)();\n\n    switch (eventName) {\n      case 'connected':\n      case 'disconnected':\n      case 'networkChanged':\n      case 'permissionsChanged':\n      case 'loggedOut':\n        {\n          const subscription = new SubscriptionImpl(async subscription => {\n            if (existingSubscriptions[id] != null) {\n              return;\n            }\n\n            existingSubscriptions[id] = data => {\n              subscription.notify(data);\n            };\n          }, async () => {\n            delete existingSubscriptions[id];\n          });\n          await subscription.subscribe();\n          return subscription;\n        }\n\n      case 'transactionsFound':\n      case 'contractStateChanged':\n        {\n          await this.ensureInitialized();\n          const address = params.address.toString();\n          const subscription = new SubscriptionImpl(async subscription => {\n            if (existingSubscriptions[id] != null) {\n              return;\n            }\n\n            existingSubscriptions[id] = data => {\n              if (data.address.toString() == address) {\n                subscription.notify(data);\n              }\n            };\n\n            let contractSubscriptions = this._contractSubscriptions[address];\n\n            if (contractSubscriptions == null) {\n              contractSubscriptions = {};\n              this._contractSubscriptions[address] = contractSubscriptions;\n            }\n\n            contractSubscriptions[id] = {\n              state: eventName == 'contractStateChanged',\n              transactions: eventName == 'transactionsFound'\n            };\n            const {\n              total,\n              withoutExcluded\n            } = foldSubscriptions(Object.values(contractSubscriptions), contractSubscriptions[id]);\n\n            try {\n              if (total.transactions != withoutExcluded.transactions || total.state != withoutExcluded.state) {\n                await this.rawApi.subscribe({\n                  address,\n                  subscriptions: total\n                });\n              }\n            } catch (e) {\n              delete existingSubscriptions[id];\n              delete contractSubscriptions[id];\n              throw e;\n            }\n          }, async () => {\n            delete existingSubscriptions[id];\n            const contractSubscriptions = this._contractSubscriptions[address];\n\n            if (contractSubscriptions == null) {\n              return;\n            }\n\n            const updates = contractSubscriptions[id];\n            const {\n              total,\n              withoutExcluded\n            } = foldSubscriptions(Object.values(contractSubscriptions), updates);\n            delete contractSubscriptions[id];\n\n            if (!withoutExcluded.transactions && !withoutExcluded.state) {\n              await this.rawApi.unsubscribe({\n                address\n              });\n            } else if (total.transactions != withoutExcluded.transactions || total.state != withoutExcluded.state) {\n              await this.rawApi.subscribe({\n                address,\n                subscriptions: withoutExcluded\n              });\n            }\n          });\n          await subscription.subscribe();\n          return subscription;\n        }\n\n      default:\n        {\n          throw new Error(`Unknown event ${eventName}`);\n        }\n    }\n  }\n  /**\n   * Returns provider api state\n   *\n   * ---\n   * Required permissions: none\n   */\n\n\n  async getProviderState() {\n    await this.ensureInitialized();\n    const state = await this._api.getProviderState();\n    return { ...state,\n      permissions: (0, models_1.parsePermissions)(state.permissions)\n    };\n  }\n  /**\n   * Requests contract balance\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getBalance(address) {\n    const {\n      state\n    } = await this.getFullContractState({\n      address\n    });\n    return state == null ? '0' : state === null || state === void 0 ? void 0 : state.balance;\n  }\n  /**\n   * Requests contract data\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getFullContractState(args) {\n    await this.ensureInitialized();\n    return await this._api.getFullContractState({\n      address: args.address.toString()\n    });\n  }\n  /**\n   * Requests accounts with specified code hash\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getAccountsByCodeHash(args) {\n    await this.ensureInitialized();\n    const {\n      accounts,\n      continuation\n    } = await this._api.getAccountsByCodeHash({ ...args\n    });\n    return {\n      accounts: accounts.map(address => new utils_1.Address(address)),\n      continuation\n    };\n  }\n  /**\n   * Requests contract transactions\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getTransactions(args) {\n    await this.ensureInitialized();\n    const {\n      transactions,\n      continuation,\n      info\n    } = await this._api.getTransactions({ ...args,\n      address: args.address.toString()\n    });\n    return {\n      transactions: transactions.map(models_1.parseTransaction),\n      continuation,\n      info\n    };\n  }\n  /**\n   * Searches transaction by hash\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getTransaction(args) {\n    await this.ensureInitialized();\n    const {\n      transaction\n    } = await this._api.getTransaction({ ...args\n    });\n    return {\n      transaction: transaction ? (0, models_1.parseTransaction)(transaction) : undefined\n    };\n  }\n  /**\n   * Computes contract address from code and init params\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getExpectedAddress(abi, args) {\n    const {\n      address\n    } = await this.getStateInit(abi, args);\n    return address;\n  }\n  /**\n   * Computes contract address and state from code and init params\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getStateInit(abi, args) {\n    await this.ensureInitialized();\n    const {\n      address,\n      stateInit\n    } = await this._api.getExpectedAddress({\n      abi: JSON.stringify(abi),\n      ...args,\n      initParams: (0, models_1.serializeTokensObject)(args.initParams)\n    });\n    return {\n      address: new utils_1.Address(address),\n      stateInit\n    };\n  }\n  /**\n   * Computes hash of base64 encoded BOC\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getBocHash(boc) {\n    await this.ensureInitialized();\n    return await this._api.getBocHash({\n      boc\n    }).then(_ref => {\n      let {\n        hash\n      } = _ref;\n      return hash;\n    });\n  }\n  /**\n   * Creates base64 encoded BOC\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async packIntoCell(args) {\n    await this.ensureInitialized();\n    return await this._api.packIntoCell({\n      structure: args.structure,\n      data: (0, models_1.serializeTokensObject)(args.data)\n    });\n  }\n  /**\n   * Decodes base64 encoded BOC\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async unpackFromCell(args) {\n    await this.ensureInitialized();\n    const {\n      data\n    } = await this._api.unpackFromCell({ ...args,\n      structure: args.structure\n    });\n    return {\n      data: (0, models_1.parseTokensObject)(args.structure, data)\n    };\n  }\n  /**\n   * Extracts public key from raw account state\n   *\n   * **NOTE:** can only be used on contracts which are deployed and has `pubkey` header\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async extractPublicKey(boc) {\n    await this.ensureInitialized();\n    const {\n      publicKey\n    } = await this._api.extractPublicKey({\n      boc\n    });\n    return publicKey;\n  }\n  /**\n   * Converts base64 encoded contract code into tvc with default init data\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async codeToTvc(code) {\n    await this.ensureInitialized();\n    const {\n      tvc\n    } = await this._api.codeToTvc({\n      code\n    });\n    return tvc;\n  }\n  /**\n   * Merges code and data into state init\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async mergeTvc(args) {\n    await this.ensureInitialized();\n    return await this._api.mergeTvc(args);\n  }\n  /**\n   * Splits base64 encoded state init into code and data\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async splitTvc(tvc) {\n    await this.ensureInitialized();\n    return await this._api.splitTvc({\n      tvc\n    });\n  }\n  /**\n   * Merges code and data into state init\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async setCodeSalt(args) {\n    let salt;\n\n    if (typeof args.salt === 'string') {\n      await this.ensureInitialized();\n      salt = args.salt;\n    } else {\n      const {\n        boc\n      } = await this.packIntoCell(args.salt);\n      salt = boc;\n    }\n\n    return await this._api.setCodeSalt({\n      code: args.code,\n      salt\n    });\n  }\n  /**\n   * Retrieves salt from code. Returns undefined if code doesn't contain salt\n   *\n   * ---\n   * Required permissions: `basic`\n   */\n\n\n  async getCodeSalt(args) {\n    await this.ensureInitialized();\n    const {\n      salt\n    } = await this.rawApi.getCodeSalt({\n      code: args.code\n    });\n    return salt;\n  }\n  /**\n   * Adds asset to the selected account\n   *\n   * ---\n   * Requires permissions: `accountInteraction`\n   */\n\n\n  async addAsset(args) {\n    await this.ensureInitialized();\n    let params;\n\n    switch (args.type) {\n      case 'tip3_token':\n        {\n          params = {\n            rootContract: args.params.rootContract.toString()\n          };\n          break;\n        }\n\n      default:\n        throw new Error('Unknown asset type');\n    }\n\n    return await this._api.addAsset({\n      account: args.account.toString(),\n      type: args.type,\n      params\n    });\n  }\n\n  async verifySignature(args) {\n    await this.ensureInitialized();\n    return await this._api.verifySignature(args);\n  }\n  /**\n   * Signs arbitrary data.\n   *\n   * NOTE: hashes data before signing. Use `signDataRaw` to sign without hash.\n   *\n   * ---\n   * Requires permissions: `accountInteraction`\n   */\n\n\n  async signData(args) {\n    await this.ensureInitialized();\n    return await this._api.signData(args);\n  }\n  /**\n   * Signs arbitrary data without hashing it\n   *\n   * ---\n   * Requires permissions: `accountInteraction`\n   */\n\n\n  async signDataRaw(args) {\n    await this.ensureInitialized();\n    return await this._api.signDataRaw(args);\n  }\n  /**\n   * Encrypts arbitrary data with specified algorithm for each specified recipient\n   *\n   * ---\n   * Requires permissions: `accountInteraction`\n   */\n\n\n  async encryptData(args) {\n    await this.ensureInitialized();\n    const {\n      encryptedData\n    } = await this._api.encryptData(args);\n    return encryptedData;\n  }\n  /**\n   * Decrypts encrypted data. Returns base64 encoded data\n   *\n   * ---\n   * Requires permissions: `accountInteraction`\n   */\n\n\n  async decryptData(encryptedData) {\n    await this.ensureInitialized();\n    const {\n      data\n    } = await this._api.decryptData({\n      encryptedData\n    });\n    return data;\n  }\n  /**\n   * Sends internal message from user account.\n   * Shows an approval window to the user.\n   *\n   * ---\n   * Required permissions: `accountInteraction`\n   */\n\n\n  async sendMessage(args) {\n    await this.ensureInitialized();\n    const {\n      transaction\n    } = await this._api.sendMessage({ ...args,\n      sender: args.sender.toString(),\n      recipient: args.recipient.toString(),\n      payload: args.payload ? {\n        abi: args.payload.abi,\n        method: args.payload.method,\n        params: (0, models_1.serializeTokensObject)(args.payload.params)\n      } : undefined\n    });\n    return {\n      transaction: (0, models_1.parseTransaction)(transaction)\n    };\n  }\n\n  _registerEventHandlers(provider) {\n    const knownEvents = {\n      'connected': data => data,\n      'disconnected': data => data,\n      'transactionsFound': data => ({\n        address: new utils_1.Address(data.address),\n        transactions: data.transactions.map(models_1.parseTransaction),\n        info: data.info\n      }),\n      'contractStateChanged': data => ({\n        address: new utils_1.Address(data.address),\n        state: data.state\n      }),\n      'networkChanged': data => data,\n      'permissionsChanged': data => ({\n        permissions: (0, models_1.parsePermissions)(data.permissions)\n      }),\n      'loggedOut': data => data\n    };\n\n    for (const [eventName, extractor] of Object.entries(knownEvents)) {\n      provider.addListener(eventName, data => {\n        const handlers = this._subscriptions[eventName];\n\n        if (handlers == null) {\n          return;\n        }\n\n        const parsed = extractor(data);\n\n        for (const handler of Object.values(handlers)) {\n          handler(parsed);\n        }\n      });\n    }\n  }\n\n  _getEventSubscriptions(eventName) {\n    let existingSubscriptions = this._subscriptions[eventName];\n\n    if (existingSubscriptions == null) {\n      existingSubscriptions = {};\n      this._subscriptions[eventName] = existingSubscriptions;\n    }\n\n    return existingSubscriptions;\n  }\n\n}\n\nexports.ProviderRpcClient = ProviderRpcClient;\n/**\n * @category Provider\n */\n\nclass ProviderNotFoundException extends Error {\n  constructor() {\n    super('Everscale provider was not found');\n  }\n\n}\n\nexports.ProviderNotFoundException = ProviderNotFoundException;\n/**\n * @category Provider\n */\n\nclass ProviderNotInitializedException extends Error {\n  constructor() {\n    super('Everscale provider was not initialized yet');\n  }\n\n}\n\nexports.ProviderNotInitializedException = ProviderNotInitializedException;\n\nfunction foldSubscriptions(subscriptions, except) {\n  const total = {\n    state: false,\n    transactions: false\n  };\n  const withoutExcluded = Object.assign({}, total);\n\n  for (const item of subscriptions) {\n    if (withoutExcluded.transactions && withoutExcluded.state) {\n      break;\n    }\n\n    total.state || (total.state = item.state);\n    total.transactions || (total.transactions = item.transactions);\n\n    if (item != except) {\n      withoutExcluded.state || (withoutExcluded.state = item.state);\n      withoutExcluded.transactions || (withoutExcluded.transactions = item.transactions);\n    }\n  }\n\n  return {\n    total,\n    withoutExcluded\n  };\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__exportStar","exports","p","ProviderNotInitializedException","ProviderNotFoundException","ProviderRpcClient","hasEverscaleProvider","mergeTransactions","AddressLiteral","Address","Subscriber","models_1","require","utils_1","subscriber","contract","stream_1","utils_2","isBrowser","window","document","ensurePageLoaded","readyState","Promise","resolve","addEventListener","getProvider","__ever","ton","__hasEverscaleProvider","hasTonProvider","constructor","properties","_subscriptions","_contractSubscriptions","_properties","self","ProviderContract","Contract","abi","address","ProviderSubscriber","_api","Proxy","_object","method","params","_provider","request","forceUseFallback","_initializationPromise","fallback","then","provider","hasProvider","eventName","_data","_registerEventHandlers","ensureInitialized","isInitialized","raw","rawApi","createContract","createSubscriber","requestPermissions","args","permissions","parsePermissions","changeAccount","disconnect","subscribe","SubscriptionImpl","_subscribe","_unsubscribe","_listeners","_subscribed","handler","unsubscribe","on","listener","push","notify","data","existingSubscriptions","_getEventSubscriptions","id","getUniqueId","subscription","toString","contractSubscriptions","state","transactions","total","withoutExcluded","foldSubscriptions","values","subscriptions","e","updates","Error","getProviderState","getBalance","getFullContractState","balance","getAccountsByCodeHash","accounts","continuation","map","getTransactions","info","parseTransaction","getTransaction","transaction","getExpectedAddress","getStateInit","stateInit","JSON","stringify","initParams","serializeTokensObject","getBocHash","boc","hash","packIntoCell","structure","unpackFromCell","parseTokensObject","extractPublicKey","publicKey","codeToTvc","code","tvc","mergeTvc","splitTvc","setCodeSalt","salt","getCodeSalt","addAsset","type","rootContract","account","verifySignature","signData","signDataRaw","encryptData","encryptedData","decryptData","sendMessage","sender","recipient","payload","knownEvents","extractor","entries","addListener","handlers","parsed","except","assign","item"],"sources":["/Users/romanrakhlin/Dropbox/Mac/Desktop/cross-chain-reputation/client/node_modules/everscale-inpage-provider/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderNotInitializedException = exports.ProviderNotFoundException = exports.ProviderRpcClient = exports.hasEverscaleProvider = exports.mergeTransactions = exports.AddressLiteral = exports.Address = exports.Subscriber = void 0;\nconst models_1 = require(\"./models\");\nconst utils_1 = require(\"./utils\");\nconst subscriber = __importStar(require(\"./stream\"));\nconst contract = __importStar(require(\"./contract\"));\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./models\"), exports);\n__exportStar(require(\"./contract\"), exports);\nvar stream_1 = require(\"./stream\");\nObject.defineProperty(exports, \"Subscriber\", { enumerable: true, get: function () { return stream_1.Subscriber; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"Address\", { enumerable: true, get: function () { return utils_2.Address; } });\nObject.defineProperty(exports, \"AddressLiteral\", { enumerable: true, get: function () { return utils_2.AddressLiteral; } });\nObject.defineProperty(exports, \"mergeTransactions\", { enumerable: true, get: function () { return utils_2.mergeTransactions; } });\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nlet ensurePageLoaded;\nif (!isBrowser || document.readyState == 'complete') {\n    ensurePageLoaded = Promise.resolve();\n}\nelse {\n    ensurePageLoaded = new Promise((resolve) => {\n        window.addEventListener('load', () => {\n            resolve();\n        });\n    });\n}\nconst getProvider = () => isBrowser ? (window.__ever || window.ton) : undefined;\n/**\n * @category Provider\n */\nasync function hasEverscaleProvider() {\n    if (!isBrowser) {\n        return false;\n    }\n    await ensurePageLoaded;\n    return window.__hasEverscaleProvider === true ||\n        window.hasTonProvider === true;\n}\nexports.hasEverscaleProvider = hasEverscaleProvider;\n/**\n * @category Provider\n */\nclass ProviderRpcClient {\n    constructor(properties = {}) {\n        this._subscriptions = {};\n        this._contractSubscriptions = {};\n        this._properties = properties;\n        const self = this;\n        // Create contract proxy type\n        class ProviderContract extends contract.Contract {\n            constructor(abi, address) {\n                super(self, abi, address);\n            }\n        }\n        this.Contract = ProviderContract;\n        // Create subscriber proxy type\n        class ProviderSubscriber extends subscriber.Subscriber {\n            constructor() {\n                super(self);\n            }\n        }\n        this.Subscriber = ProviderSubscriber;\n        // Wrap provider requests\n        this._api = new Proxy({}, {\n            get: (_object, method) => (params) => {\n                if (this._provider != null) {\n                    return this._provider.request({ method, params: params });\n                }\n                else {\n                    throw new ProviderNotInitializedException();\n                }\n            },\n        });\n        if (properties.forceUseFallback === true) {\n            this._initializationPromise = properties.fallback != null\n                ? properties.fallback()\n                    .then((provider) => {\n                    this._provider = provider;\n                })\n                : Promise.resolve();\n        }\n        else {\n            // Initialize provider with injected object by default\n            this._provider = getProvider();\n            if (this._provider != null) {\n                // Provider as already injected\n                this._initializationPromise = Promise.resolve();\n            }\n            else {\n                // Wait until page is loaded and initialization complete\n                this._initializationPromise = hasEverscaleProvider()\n                    .then((hasProvider) => new Promise((resolve) => {\n                    if (!hasProvider) {\n                        // Fully loaded page doesn't even contain provider flag\n                        return resolve();\n                    }\n                    // Wait injected provider initialization otherwise\n                    this._provider = getProvider();\n                    if (this._provider != null) {\n                        resolve();\n                    }\n                    else {\n                        const eventName = window.__hasEverscaleProvider === true ? 'ever#initialized' : 'ton#initialized';\n                        window.addEventListener(eventName, (_data) => {\n                            this._provider = getProvider();\n                            resolve();\n                        });\n                    }\n                }))\n                    .then(async () => {\n                    if (this._provider == null && properties.fallback != null) {\n                        this._provider = await properties.fallback();\n                    }\n                });\n            }\n        }\n        // Will only register handlers for successfully loaded injected provider\n        this._initializationPromise.then(() => {\n            if (this._provider != null) {\n                this._registerEventHandlers(this._provider);\n            }\n        });\n    }\n    /**\n     * Checks whether this page has injected Everscale provider or\n     * there is a fallback provider.\n     */\n    async hasProvider() {\n        if (this._properties.fallback != null) {\n            return true;\n        }\n        return hasEverscaleProvider();\n    }\n    /**\n     * Waits until provider api will be available. Calls `fallback` if no provider was found\n     *\n     * @throws ProviderNotFoundException when no provider found\n     */\n    async ensureInitialized() {\n        await this._initializationPromise;\n        if (this._provider == null) {\n            throw new ProviderNotFoundException();\n        }\n    }\n    /**\n     * Whether provider api is ready\n     */\n    get isInitialized() {\n        return this._provider != null;\n    }\n    /**\n     * Raw provider\n     */\n    get raw() {\n        if (this._provider != null) {\n            return this._provider;\n        }\n        else {\n            throw new ProviderNotInitializedException();\n        }\n    }\n    /**\n     * Raw provider api\n     */\n    get rawApi() {\n        return this._api;\n    }\n    /**\n     * Creates typed contract wrapper.\n     *\n     * @param abi Readonly object (must be declared with `as const`)\n     * @param address Default contract address\n     *\n     * @deprecated `new ever.Contract(abi, address)` should be used instead\n     */\n    createContract(abi, address) {\n        return new this.Contract(abi, address);\n    }\n    /**\n     * Creates subscriptions group\n     *\n     * @deprecated `new ever.Subscriber()` should be used instead\n     */\n    createSubscriber() {\n        return new this.Subscriber();\n    }\n    /**\n     * Requests new permissions for current origin.\n     * Shows an approval window to the user.\n     * Will overwrite already existing permissions\n     *\n     * ---\n     * Required permissions: none\n     */\n    async requestPermissions(args) {\n        await this.ensureInitialized();\n        const result = await this._api.requestPermissions({\n            permissions: args.permissions,\n        });\n        return (0, models_1.parsePermissions)(result);\n    }\n    /**\n     * Updates `accountInteraction` permission value\n     *\n     * ---\n     * Requires permissions: `accountInteraction`\n     */\n    async changeAccount() {\n        await this.ensureInitialized();\n        await this._api.changeAccount();\n    }\n    /**\n     * Removes all permissions for current origin and stops all subscriptions\n     */\n    async disconnect() {\n        await this.ensureInitialized();\n        await this._api.disconnect();\n    }\n    async subscribe(eventName, params) {\n        class SubscriptionImpl {\n            constructor(_subscribe, _unsubscribe) {\n                this._subscribe = _subscribe;\n                this._unsubscribe = _unsubscribe;\n                this._listeners = {\n                    ['data']: [],\n                    ['subscribed']: [],\n                    ['unsubscribed']: [],\n                };\n                this._subscribed = false;\n                this.subscribe = async () => {\n                    if (this._subscribed) {\n                        return;\n                    }\n                    this._subscribed = true;\n                    await this._subscribe(this);\n                    for (const handler of this._listeners['subscribed']) {\n                        handler();\n                    }\n                };\n                this.unsubscribe = async () => {\n                    if (!this._subscribed) {\n                        return;\n                    }\n                    this._subscribed = false;\n                    await this._unsubscribe();\n                    for (const handler of this._listeners['unsubscribed']) {\n                        handler();\n                    }\n                };\n            }\n            on(eventName, listener) {\n                this._listeners[eventName].push(listener);\n                return this;\n            }\n            notify(data) {\n                for (const handler of this._listeners['data']) {\n                    handler(data);\n                }\n            }\n        }\n        let existingSubscriptions = this._getEventSubscriptions(eventName);\n        const id = (0, utils_1.getUniqueId)();\n        switch (eventName) {\n            case 'connected':\n            case 'disconnected':\n            case 'networkChanged':\n            case 'permissionsChanged':\n            case 'loggedOut': {\n                const subscription = new SubscriptionImpl(async (subscription) => {\n                    if (existingSubscriptions[id] != null) {\n                        return;\n                    }\n                    existingSubscriptions[id] = (data) => {\n                        subscription.notify(data);\n                    };\n                }, async () => {\n                    delete existingSubscriptions[id];\n                });\n                await subscription.subscribe();\n                return subscription;\n            }\n            case 'transactionsFound':\n            case 'contractStateChanged': {\n                await this.ensureInitialized();\n                const address = params.address.toString();\n                const subscription = new SubscriptionImpl(async (subscription) => {\n                    if (existingSubscriptions[id] != null) {\n                        return;\n                    }\n                    existingSubscriptions[id] = ((data) => {\n                        if (data.address.toString() == address) {\n                            subscription.notify(data);\n                        }\n                    });\n                    let contractSubscriptions = this._contractSubscriptions[address];\n                    if (contractSubscriptions == null) {\n                        contractSubscriptions = {};\n                        this._contractSubscriptions[address] = contractSubscriptions;\n                    }\n                    contractSubscriptions[id] = {\n                        state: eventName == 'contractStateChanged',\n                        transactions: eventName == 'transactionsFound',\n                    };\n                    const { total, withoutExcluded, } = foldSubscriptions(Object.values(contractSubscriptions), contractSubscriptions[id]);\n                    try {\n                        if (total.transactions != withoutExcluded.transactions || total.state != withoutExcluded.state) {\n                            await this.rawApi.subscribe({ address, subscriptions: total });\n                        }\n                    }\n                    catch (e) {\n                        delete existingSubscriptions[id];\n                        delete contractSubscriptions[id];\n                        throw e;\n                    }\n                }, async () => {\n                    delete existingSubscriptions[id];\n                    const contractSubscriptions = this._contractSubscriptions[address];\n                    if (contractSubscriptions == null) {\n                        return;\n                    }\n                    const updates = contractSubscriptions[id];\n                    const { total, withoutExcluded } = foldSubscriptions(Object.values(contractSubscriptions), updates);\n                    delete contractSubscriptions[id];\n                    if (!withoutExcluded.transactions && !withoutExcluded.state) {\n                        await this.rawApi.unsubscribe({ address });\n                    }\n                    else if (total.transactions != withoutExcluded.transactions || total.state != withoutExcluded.state) {\n                        await this.rawApi.subscribe({ address, subscriptions: withoutExcluded });\n                    }\n                });\n                await subscription.subscribe();\n                return subscription;\n            }\n            default: {\n                throw new Error(`Unknown event ${eventName}`);\n            }\n        }\n    }\n    /**\n     * Returns provider api state\n     *\n     * ---\n     * Required permissions: none\n     */\n    async getProviderState() {\n        await this.ensureInitialized();\n        const state = await this._api.getProviderState();\n        return {\n            ...state,\n            permissions: (0, models_1.parsePermissions)(state.permissions),\n        };\n    }\n    /**\n     * Requests contract balance\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getBalance(address) {\n        const { state } = await this.getFullContractState({\n            address,\n        });\n        return state == null ? '0' : state === null || state === void 0 ? void 0 : state.balance;\n    }\n    /**\n     * Requests contract data\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getFullContractState(args) {\n        await this.ensureInitialized();\n        return await this._api.getFullContractState({\n            address: args.address.toString(),\n        });\n    }\n    /**\n     * Requests accounts with specified code hash\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getAccountsByCodeHash(args) {\n        await this.ensureInitialized();\n        const { accounts, continuation } = await this._api.getAccountsByCodeHash({\n            ...args,\n        });\n        return {\n            accounts: accounts.map((address) => new utils_1.Address(address)),\n            continuation,\n        };\n    }\n    /**\n     * Requests contract transactions\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getTransactions(args) {\n        await this.ensureInitialized();\n        const { transactions, continuation, info } = await this._api.getTransactions({\n            ...args,\n            address: args.address.toString(),\n        });\n        return {\n            transactions: transactions.map(models_1.parseTransaction),\n            continuation,\n            info,\n        };\n    }\n    /**\n     * Searches transaction by hash\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getTransaction(args) {\n        await this.ensureInitialized();\n        const { transaction } = await this._api.getTransaction({\n            ...args,\n        });\n        return {\n            transaction: transaction ? (0, models_1.parseTransaction)(transaction) : undefined,\n        };\n    }\n    /**\n     * Computes contract address from code and init params\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getExpectedAddress(abi, args) {\n        const { address } = await this.getStateInit(abi, args);\n        return address;\n    }\n    /**\n     * Computes contract address and state from code and init params\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getStateInit(abi, args) {\n        await this.ensureInitialized();\n        const { address, stateInit } = await this._api.getExpectedAddress({\n            abi: JSON.stringify(abi),\n            ...args,\n            initParams: (0, models_1.serializeTokensObject)(args.initParams),\n        });\n        return {\n            address: new utils_1.Address(address),\n            stateInit,\n        };\n    }\n    /**\n     * Computes hash of base64 encoded BOC\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getBocHash(boc) {\n        await this.ensureInitialized();\n        return await this._api.getBocHash({\n            boc,\n        }).then(({ hash }) => hash);\n    }\n    /**\n     * Creates base64 encoded BOC\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async packIntoCell(args) {\n        await this.ensureInitialized();\n        return await this._api.packIntoCell({\n            structure: args.structure,\n            data: (0, models_1.serializeTokensObject)(args.data),\n        });\n    }\n    /**\n     * Decodes base64 encoded BOC\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async unpackFromCell(args) {\n        await this.ensureInitialized();\n        const { data } = await this._api.unpackFromCell({\n            ...args,\n            structure: args.structure,\n        });\n        return {\n            data: (0, models_1.parseTokensObject)(args.structure, data),\n        };\n    }\n    /**\n     * Extracts public key from raw account state\n     *\n     * **NOTE:** can only be used on contracts which are deployed and has `pubkey` header\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async extractPublicKey(boc) {\n        await this.ensureInitialized();\n        const { publicKey } = await this._api.extractPublicKey({\n            boc,\n        });\n        return publicKey;\n    }\n    /**\n     * Converts base64 encoded contract code into tvc with default init data\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async codeToTvc(code) {\n        await this.ensureInitialized();\n        const { tvc } = await this._api.codeToTvc({\n            code,\n        });\n        return tvc;\n    }\n    /**\n     * Merges code and data into state init\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async mergeTvc(args) {\n        await this.ensureInitialized();\n        return await this._api.mergeTvc(args);\n    }\n    /**\n     * Splits base64 encoded state init into code and data\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async splitTvc(tvc) {\n        await this.ensureInitialized();\n        return await this._api.splitTvc({\n            tvc,\n        });\n    }\n    /**\n     * Merges code and data into state init\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async setCodeSalt(args) {\n        let salt;\n        if (typeof args.salt === 'string') {\n            await this.ensureInitialized();\n            salt = args.salt;\n        }\n        else {\n            const { boc } = await this.packIntoCell(args.salt);\n            salt = boc;\n        }\n        return await this._api.setCodeSalt({ code: args.code, salt });\n    }\n    /**\n     * Retrieves salt from code. Returns undefined if code doesn't contain salt\n     *\n     * ---\n     * Required permissions: `basic`\n     */\n    async getCodeSalt(args) {\n        await this.ensureInitialized();\n        const { salt } = await this.rawApi.getCodeSalt({\n            code: args.code,\n        });\n        return salt;\n    }\n    /**\n     * Adds asset to the selected account\n     *\n     * ---\n     * Requires permissions: `accountInteraction`\n     */\n    async addAsset(args) {\n        await this.ensureInitialized();\n        let params;\n        switch (args.type) {\n            case 'tip3_token': {\n                params = {\n                    rootContract: args.params.rootContract.toString(),\n                };\n                break;\n            }\n            default:\n                throw new Error('Unknown asset type');\n        }\n        return await this._api.addAsset({\n            account: args.account.toString(),\n            type: args.type,\n            params,\n        });\n    }\n    async verifySignature(args) {\n        await this.ensureInitialized();\n        return await this._api.verifySignature(args);\n    }\n    /**\n     * Signs arbitrary data.\n     *\n     * NOTE: hashes data before signing. Use `signDataRaw` to sign without hash.\n     *\n     * ---\n     * Requires permissions: `accountInteraction`\n     */\n    async signData(args) {\n        await this.ensureInitialized();\n        return await this._api.signData(args);\n    }\n    /**\n     * Signs arbitrary data without hashing it\n     *\n     * ---\n     * Requires permissions: `accountInteraction`\n     */\n    async signDataRaw(args) {\n        await this.ensureInitialized();\n        return await this._api.signDataRaw(args);\n    }\n    /**\n     * Encrypts arbitrary data with specified algorithm for each specified recipient\n     *\n     * ---\n     * Requires permissions: `accountInteraction`\n     */\n    async encryptData(args) {\n        await this.ensureInitialized();\n        const { encryptedData } = await this._api.encryptData(args);\n        return encryptedData;\n    }\n    /**\n     * Decrypts encrypted data. Returns base64 encoded data\n     *\n     * ---\n     * Requires permissions: `accountInteraction`\n     */\n    async decryptData(encryptedData) {\n        await this.ensureInitialized();\n        const { data } = await this._api.decryptData({ encryptedData });\n        return data;\n    }\n    /**\n     * Sends internal message from user account.\n     * Shows an approval window to the user.\n     *\n     * ---\n     * Required permissions: `accountInteraction`\n     */\n    async sendMessage(args) {\n        await this.ensureInitialized();\n        const { transaction } = await this._api.sendMessage({\n            ...args,\n            sender: args.sender.toString(),\n            recipient: args.recipient.toString(),\n            payload: args.payload ? ({\n                abi: args.payload.abi,\n                method: args.payload.method,\n                params: (0, models_1.serializeTokensObject)(args.payload.params),\n            }) : undefined,\n        });\n        return {\n            transaction: (0, models_1.parseTransaction)(transaction),\n        };\n    }\n    _registerEventHandlers(provider) {\n        const knownEvents = {\n            'connected': (data) => data,\n            'disconnected': (data) => data,\n            'transactionsFound': (data) => ({\n                address: new utils_1.Address(data.address),\n                transactions: data.transactions.map(models_1.parseTransaction),\n                info: data.info,\n            }),\n            'contractStateChanged': (data) => ({\n                address: new utils_1.Address(data.address),\n                state: data.state,\n            }),\n            'networkChanged': data => data,\n            'permissionsChanged': (data) => ({\n                permissions: (0, models_1.parsePermissions)(data.permissions),\n            }),\n            'loggedOut': data => data,\n        };\n        for (const [eventName, extractor] of Object.entries(knownEvents)) {\n            provider.addListener(eventName, (data) => {\n                const handlers = this._subscriptions[eventName];\n                if (handlers == null) {\n                    return;\n                }\n                const parsed = extractor(data);\n                for (const handler of Object.values(handlers)) {\n                    handler(parsed);\n                }\n            });\n        }\n    }\n    _getEventSubscriptions(eventName) {\n        let existingSubscriptions = this._subscriptions[eventName];\n        if (existingSubscriptions == null) {\n            existingSubscriptions = {};\n            this._subscriptions[eventName] = existingSubscriptions;\n        }\n        return existingSubscriptions;\n    }\n}\nexports.ProviderRpcClient = ProviderRpcClient;\n/**\n * @category Provider\n */\nclass ProviderNotFoundException extends Error {\n    constructor() {\n        super('Everscale provider was not found');\n    }\n}\nexports.ProviderNotFoundException = ProviderNotFoundException;\n/**\n * @category Provider\n */\nclass ProviderNotInitializedException extends Error {\n    constructor() {\n        super('Everscale provider was not initialized yet');\n    }\n}\nexports.ProviderNotInitializedException = ProviderNotInitializedException;\nfunction foldSubscriptions(subscriptions, except) {\n    const total = { state: false, transactions: false };\n    const withoutExcluded = Object.assign({}, total);\n    for (const item of subscriptions) {\n        if (withoutExcluded.transactions && withoutExcluded.state) {\n            break;\n        }\n        total.state || (total.state = item.state);\n        total.transactions || (total.transactions = item.transactions);\n        if (item != except) {\n            withoutExcluded.state || (withoutExcluded.state = item.state);\n            withoutExcluded.transactions || (withoutExcluded.transactions = item.transactions);\n        }\n    }\n    return { total, withoutExcluded };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}