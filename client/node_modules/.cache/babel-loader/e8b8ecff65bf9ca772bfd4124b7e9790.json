{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseTokensObject = exports.serializeTokensObject = exports.parseAccountInteraction = exports.parsePermissions = exports.parseMessage = exports.serializeMessage = exports.parseTransaction = exports.serializeTransaction = void 0;\n\nconst utils_1 = require(\"./utils\");\n/**\n * @category Models\n */\n\n\nfunction serializeTransaction(transaction) {\n  return { ...transaction,\n    inMessage: serializeMessage(transaction.inMessage),\n    outMessages: transaction.outMessages.map(serializeMessage)\n  };\n}\n\nexports.serializeTransaction = serializeTransaction;\n/**\n * @category Models\n */\n\nfunction parseTransaction(transaction) {\n  return { ...transaction,\n    inMessage: parseMessage(transaction.inMessage),\n    outMessages: transaction.outMessages.map(parseMessage)\n  };\n}\n\nexports.parseTransaction = parseTransaction;\n/**\n * @category Models\n */\n\nfunction serializeMessage(message) {\n  return { ...message,\n    src: message.src ? message.src.toString() : undefined,\n    dst: message.dst ? message.dst.toString() : undefined\n  };\n}\n\nexports.serializeMessage = serializeMessage;\n/**\n * @category Models\n */\n\nfunction parseMessage(message) {\n  return { ...message,\n    src: message.src ? new utils_1.Address(message.src) : undefined,\n    dst: message.dst ? new utils_1.Address(message.dst) : undefined\n  };\n}\n\nexports.parseMessage = parseMessage;\n/**\n * @category Models\n */\n\nfunction parsePermissions(permissions) {\n  return { ...permissions,\n    accountInteraction: permissions.accountInteraction ? parseAccountInteraction(permissions.accountInteraction) : undefined\n  };\n}\n\nexports.parsePermissions = parsePermissions;\n/**\n * @category Models\n */\n\nfunction parseAccountInteraction(accountInteraction) {\n  return { ...accountInteraction,\n    address: new utils_1.Address(accountInteraction.address)\n  };\n}\n\nexports.parseAccountInteraction = parseAccountInteraction;\n/**\n * @category Models\n */\n\nfunction serializeTokensObject(object) {\n  return serializeTokenValue(object);\n}\n\nexports.serializeTokensObject = serializeTokensObject;\n\nfunction serializeTokenValue(token) {\n  if (token instanceof utils_1.Address) {\n    return token.toString();\n  }\n\n  if (Array.isArray(token)) {\n    const result = [];\n\n    for (const item of token) {\n      result.push(serializeTokenValue(item));\n    }\n\n    return result;\n  } else if (token != null && typeof token === 'object') {\n    const result = {};\n\n    for (const [key, value] of Object.entries(token)) {\n      result[key] = serializeTokenValue(value);\n    }\n\n    return result;\n  } else {\n    return token;\n  }\n}\n/**\n * @category Models\n */\n\n\nfunction parseTokensObject(params, object) {\n  const result = {};\n\n  for (const param of params) {\n    result[param.name] = parseTokenValue(param, object[param.name]);\n  }\n\n  return result;\n}\n\nexports.parseTokensObject = parseTokensObject;\n\nfunction parseTokenValue(param, token) {\n  if (!param.type.startsWith('map')) {\n    const isArray = param.type.endsWith('[]');\n    const isOptional = !isArray && param.type.startsWith('optional');\n    const rawType = isArray ? param.type.slice(0, -2) : isOptional ? param.type.slice(9, -1) : param.type;\n\n    if (isArray) {\n      const rawParam = {\n        name: param.name,\n        type: rawType,\n        components: param.components\n      };\n      const result = [];\n\n      for (const item of token) {\n        result.push(parseTokenValue(rawParam, item));\n      }\n\n      return result;\n    } else if (isOptional) {\n      if (token == null) {\n        return null;\n      } else {\n        const rawParam = {\n          name: param.name,\n          type: rawType,\n          components: param.components\n        };\n        return parseTokenValue(rawParam, token);\n      }\n    } else if (rawType == 'tuple') {\n      const result = {};\n\n      if (param.components != null) {\n        for (const component of param.components) {\n          result[component.name] = parseTokenValue(component, token[component.name]);\n        }\n      }\n\n      return result;\n    } else if (rawType == 'address') {\n      return new utils_1.Address(token);\n    } else {\n      return token;\n    }\n  } else {\n    let [keyType, valueType] = param.type.split(',');\n    keyType = keyType.slice(4);\n    valueType = valueType.slice(0, -1);\n    const result = [];\n\n    for (const [key, value] of token) {\n      result.push([parseTokenValue({\n        name: '',\n        type: keyType\n      }, key), parseTokenValue({\n        name: '',\n        type: valueType,\n        components: param.components\n      }, value)]);\n    }\n\n    return result;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","parseTokensObject","serializeTokensObject","parseAccountInteraction","parsePermissions","parseMessage","serializeMessage","parseTransaction","serializeTransaction","utils_1","require","transaction","inMessage","outMessages","map","message","src","toString","undefined","dst","Address","permissions","accountInteraction","address","object","serializeTokenValue","token","Array","isArray","result","item","push","key","entries","params","param","name","parseTokenValue","type","startsWith","endsWith","isOptional","rawType","slice","rawParam","components","component","keyType","valueType","split"],"sources":["/Users/romanrakhlin/Dropbox/Mac/Desktop/cross-chain-reputation/client/node_modules/everscale-inpage-provider/dist/models.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTokensObject = exports.serializeTokensObject = exports.parseAccountInteraction = exports.parsePermissions = exports.parseMessage = exports.serializeMessage = exports.parseTransaction = exports.serializeTransaction = void 0;\nconst utils_1 = require(\"./utils\");\n/**\n * @category Models\n */\nfunction serializeTransaction(transaction) {\n    return {\n        ...transaction,\n        inMessage: serializeMessage(transaction.inMessage),\n        outMessages: transaction.outMessages.map(serializeMessage),\n    };\n}\nexports.serializeTransaction = serializeTransaction;\n/**\n * @category Models\n */\nfunction parseTransaction(transaction) {\n    return {\n        ...transaction,\n        inMessage: parseMessage(transaction.inMessage),\n        outMessages: transaction.outMessages.map(parseMessage),\n    };\n}\nexports.parseTransaction = parseTransaction;\n/**\n * @category Models\n */\nfunction serializeMessage(message) {\n    return {\n        ...message,\n        src: message.src ? message.src.toString() : undefined,\n        dst: message.dst ? message.dst.toString() : undefined,\n    };\n}\nexports.serializeMessage = serializeMessage;\n/**\n * @category Models\n */\nfunction parseMessage(message) {\n    return {\n        ...message,\n        src: message.src ? new utils_1.Address(message.src) : undefined,\n        dst: message.dst ? new utils_1.Address(message.dst) : undefined,\n    };\n}\nexports.parseMessage = parseMessage;\n/**\n * @category Models\n */\nfunction parsePermissions(permissions) {\n    return {\n        ...permissions,\n        accountInteraction: permissions.accountInteraction ? parseAccountInteraction(permissions.accountInteraction) : undefined,\n    };\n}\nexports.parsePermissions = parsePermissions;\n/**\n * @category Models\n */\nfunction parseAccountInteraction(accountInteraction) {\n    return {\n        ...accountInteraction,\n        address: new utils_1.Address(accountInteraction.address),\n    };\n}\nexports.parseAccountInteraction = parseAccountInteraction;\n/**\n * @category Models\n */\nfunction serializeTokensObject(object) {\n    return serializeTokenValue(object);\n}\nexports.serializeTokensObject = serializeTokensObject;\nfunction serializeTokenValue(token) {\n    if (token instanceof utils_1.Address) {\n        return token.toString();\n    }\n    if (Array.isArray(token)) {\n        const result = [];\n        for (const item of token) {\n            result.push(serializeTokenValue(item));\n        }\n        return result;\n    }\n    else if (token != null && typeof token === 'object') {\n        const result = {};\n        for (const [key, value] of Object.entries(token)) {\n            result[key] = serializeTokenValue(value);\n        }\n        return result;\n    }\n    else {\n        return token;\n    }\n}\n/**\n * @category Models\n */\nfunction parseTokensObject(params, object) {\n    const result = {};\n    for (const param of params) {\n        result[param.name] = parseTokenValue(param, object[param.name]);\n    }\n    return result;\n}\nexports.parseTokensObject = parseTokensObject;\nfunction parseTokenValue(param, token) {\n    if (!param.type.startsWith('map')) {\n        const isArray = param.type.endsWith('[]');\n        const isOptional = !isArray && param.type.startsWith('optional');\n        const rawType = (isArray ?\n            param.type.slice(0, -2) :\n            isOptional ?\n                param.type.slice(9, -1) :\n                param.type);\n        if (isArray) {\n            const rawParam = { name: param.name, type: rawType, components: param.components };\n            const result = [];\n            for (const item of token) {\n                result.push(parseTokenValue(rawParam, item));\n            }\n            return result;\n        }\n        else if (isOptional) {\n            if (token == null) {\n                return null;\n            }\n            else {\n                const rawParam = { name: param.name, type: rawType, components: param.components };\n                return parseTokenValue(rawParam, token);\n            }\n        }\n        else if (rawType == 'tuple') {\n            const result = {};\n            if (param.components != null) {\n                for (const component of param.components) {\n                    result[component.name] = parseTokenValue(component, token[component.name]);\n                }\n            }\n            return result;\n        }\n        else if (rawType == 'address') {\n            return new utils_1.Address(token);\n        }\n        else {\n            return token;\n        }\n    }\n    else {\n        let [keyType, valueType] = param.type.split(',');\n        keyType = keyType.slice(4);\n        valueType = valueType.slice(0, -1);\n        const result = [];\n        for (const [key, value] of token) {\n            result.push([parseTokenValue({\n                    name: '',\n                    type: keyType,\n                }, key), parseTokenValue({\n                    name: '',\n                    type: valueType,\n                    components: param.components,\n                }, value)]);\n        }\n        return result;\n    }\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4BF,OAAO,CAACG,qBAAR,GAAgCH,OAAO,CAACI,uBAAR,GAAkCJ,OAAO,CAACK,gBAAR,GAA2BL,OAAO,CAACM,YAAR,GAAuBN,OAAO,CAACO,gBAAR,GAA2BP,OAAO,CAACQ,gBAAR,GAA2BR,OAAO,CAACS,oBAAR,GAA+B,KAAK,CAA1O;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;AACA;AACA;AACA;;;AACA,SAASF,oBAAT,CAA8BG,WAA9B,EAA2C;EACvC,OAAO,EACH,GAAGA,WADA;IAEHC,SAAS,EAAEN,gBAAgB,CAACK,WAAW,CAACC,SAAb,CAFxB;IAGHC,WAAW,EAAEF,WAAW,CAACE,WAAZ,CAAwBC,GAAxB,CAA4BR,gBAA5B;EAHV,CAAP;AAKH;;AACDP,OAAO,CAACS,oBAAR,GAA+BA,oBAA/B;AACA;AACA;AACA;;AACA,SAASD,gBAAT,CAA0BI,WAA1B,EAAuC;EACnC,OAAO,EACH,GAAGA,WADA;IAEHC,SAAS,EAAEP,YAAY,CAACM,WAAW,CAACC,SAAb,CAFpB;IAGHC,WAAW,EAAEF,WAAW,CAACE,WAAZ,CAAwBC,GAAxB,CAA4BT,YAA5B;EAHV,CAAP;AAKH;;AACDN,OAAO,CAACQ,gBAAR,GAA2BA,gBAA3B;AACA;AACA;AACA;;AACA,SAASD,gBAAT,CAA0BS,OAA1B,EAAmC;EAC/B,OAAO,EACH,GAAGA,OADA;IAEHC,GAAG,EAAED,OAAO,CAACC,GAAR,GAAcD,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAAd,GAAuCC,SAFzC;IAGHC,GAAG,EAAEJ,OAAO,CAACI,GAAR,GAAcJ,OAAO,CAACI,GAAR,CAAYF,QAAZ,EAAd,GAAuCC;EAHzC,CAAP;AAKH;;AACDnB,OAAO,CAACO,gBAAR,GAA2BA,gBAA3B;AACA;AACA;AACA;;AACA,SAASD,YAAT,CAAsBU,OAAtB,EAA+B;EAC3B,OAAO,EACH,GAAGA,OADA;IAEHC,GAAG,EAAED,OAAO,CAACC,GAAR,GAAc,IAAIP,OAAO,CAACW,OAAZ,CAAoBL,OAAO,CAACC,GAA5B,CAAd,GAAiDE,SAFnD;IAGHC,GAAG,EAAEJ,OAAO,CAACI,GAAR,GAAc,IAAIV,OAAO,CAACW,OAAZ,CAAoBL,OAAO,CAACI,GAA5B,CAAd,GAAiDD;EAHnD,CAAP;AAKH;;AACDnB,OAAO,CAACM,YAAR,GAAuBA,YAAvB;AACA;AACA;AACA;;AACA,SAASD,gBAAT,CAA0BiB,WAA1B,EAAuC;EACnC,OAAO,EACH,GAAGA,WADA;IAEHC,kBAAkB,EAAED,WAAW,CAACC,kBAAZ,GAAiCnB,uBAAuB,CAACkB,WAAW,CAACC,kBAAb,CAAxD,GAA2FJ;EAF5G,CAAP;AAIH;;AACDnB,OAAO,CAACK,gBAAR,GAA2BA,gBAA3B;AACA;AACA;AACA;;AACA,SAASD,uBAAT,CAAiCmB,kBAAjC,EAAqD;EACjD,OAAO,EACH,GAAGA,kBADA;IAEHC,OAAO,EAAE,IAAId,OAAO,CAACW,OAAZ,CAAoBE,kBAAkB,CAACC,OAAvC;EAFN,CAAP;AAIH;;AACDxB,OAAO,CAACI,uBAAR,GAAkCA,uBAAlC;AACA;AACA;AACA;;AACA,SAASD,qBAAT,CAA+BsB,MAA/B,EAAuC;EACnC,OAAOC,mBAAmB,CAACD,MAAD,CAA1B;AACH;;AACDzB,OAAO,CAACG,qBAAR,GAAgCA,qBAAhC;;AACA,SAASuB,mBAAT,CAA6BC,KAA7B,EAAoC;EAChC,IAAIA,KAAK,YAAYjB,OAAO,CAACW,OAA7B,EAAsC;IAClC,OAAOM,KAAK,CAACT,QAAN,EAAP;EACH;;EACD,IAAIU,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;IACtB,MAAMG,MAAM,GAAG,EAAf;;IACA,KAAK,MAAMC,IAAX,IAAmBJ,KAAnB,EAA0B;MACtBG,MAAM,CAACE,IAAP,CAAYN,mBAAmB,CAACK,IAAD,CAA/B;IACH;;IACD,OAAOD,MAAP;EACH,CAND,MAOK,IAAIH,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,KAAiB,QAAtC,EAAgD;IACjD,MAAMG,MAAM,GAAG,EAAf;;IACA,KAAK,MAAM,CAACG,GAAD,EAAMhC,KAAN,CAAX,IAA2BH,MAAM,CAACoC,OAAP,CAAeP,KAAf,CAA3B,EAAkD;MAC9CG,MAAM,CAACG,GAAD,CAAN,GAAcP,mBAAmB,CAACzB,KAAD,CAAjC;IACH;;IACD,OAAO6B,MAAP;EACH,CANI,MAOA;IACD,OAAOH,KAAP;EACH;AACJ;AACD;AACA;AACA;;;AACA,SAASzB,iBAAT,CAA2BiC,MAA3B,EAAmCV,MAAnC,EAA2C;EACvC,MAAMK,MAAM,GAAG,EAAf;;EACA,KAAK,MAAMM,KAAX,IAAoBD,MAApB,EAA4B;IACxBL,MAAM,CAACM,KAAK,CAACC,IAAP,CAAN,GAAqBC,eAAe,CAACF,KAAD,EAAQX,MAAM,CAACW,KAAK,CAACC,IAAP,CAAd,CAApC;EACH;;EACD,OAAOP,MAAP;AACH;;AACD9B,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;;AACA,SAASoC,eAAT,CAAyBF,KAAzB,EAAgCT,KAAhC,EAAuC;EACnC,IAAI,CAACS,KAAK,CAACG,IAAN,CAAWC,UAAX,CAAsB,KAAtB,CAAL,EAAmC;IAC/B,MAAMX,OAAO,GAAGO,KAAK,CAACG,IAAN,CAAWE,QAAX,CAAoB,IAApB,CAAhB;IACA,MAAMC,UAAU,GAAG,CAACb,OAAD,IAAYO,KAAK,CAACG,IAAN,CAAWC,UAAX,CAAsB,UAAtB,CAA/B;IACA,MAAMG,OAAO,GAAId,OAAO,GACpBO,KAAK,CAACG,IAAN,CAAWK,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CADoB,GAEpBF,UAAU,GACNN,KAAK,CAACG,IAAN,CAAWK,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CADM,GAENR,KAAK,CAACG,IAJd;;IAKA,IAAIV,OAAJ,EAAa;MACT,MAAMgB,QAAQ,GAAG;QAAER,IAAI,EAAED,KAAK,CAACC,IAAd;QAAoBE,IAAI,EAAEI,OAA1B;QAAmCG,UAAU,EAAEV,KAAK,CAACU;MAArD,CAAjB;MACA,MAAMhB,MAAM,GAAG,EAAf;;MACA,KAAK,MAAMC,IAAX,IAAmBJ,KAAnB,EAA0B;QACtBG,MAAM,CAACE,IAAP,CAAYM,eAAe,CAACO,QAAD,EAAWd,IAAX,CAA3B;MACH;;MACD,OAAOD,MAAP;IACH,CAPD,MAQK,IAAIY,UAAJ,EAAgB;MACjB,IAAIf,KAAK,IAAI,IAAb,EAAmB;QACf,OAAO,IAAP;MACH,CAFD,MAGK;QACD,MAAMkB,QAAQ,GAAG;UAAER,IAAI,EAAED,KAAK,CAACC,IAAd;UAAoBE,IAAI,EAAEI,OAA1B;UAAmCG,UAAU,EAAEV,KAAK,CAACU;QAArD,CAAjB;QACA,OAAOR,eAAe,CAACO,QAAD,EAAWlB,KAAX,CAAtB;MACH;IACJ,CARI,MASA,IAAIgB,OAAO,IAAI,OAAf,EAAwB;MACzB,MAAMb,MAAM,GAAG,EAAf;;MACA,IAAIM,KAAK,CAACU,UAAN,IAAoB,IAAxB,EAA8B;QAC1B,KAAK,MAAMC,SAAX,IAAwBX,KAAK,CAACU,UAA9B,EAA0C;UACtChB,MAAM,CAACiB,SAAS,CAACV,IAAX,CAAN,GAAyBC,eAAe,CAACS,SAAD,EAAYpB,KAAK,CAACoB,SAAS,CAACV,IAAX,CAAjB,CAAxC;QACH;MACJ;;MACD,OAAOP,MAAP;IACH,CARI,MASA,IAAIa,OAAO,IAAI,SAAf,EAA0B;MAC3B,OAAO,IAAIjC,OAAO,CAACW,OAAZ,CAAoBM,KAApB,CAAP;IACH,CAFI,MAGA;MACD,OAAOA,KAAP;IACH;EACJ,CAxCD,MAyCK;IACD,IAAI,CAACqB,OAAD,EAAUC,SAAV,IAAuBb,KAAK,CAACG,IAAN,CAAWW,KAAX,CAAiB,GAAjB,CAA3B;IACAF,OAAO,GAAGA,OAAO,CAACJ,KAAR,CAAc,CAAd,CAAV;IACAK,SAAS,GAAGA,SAAS,CAACL,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ;IACA,MAAMd,MAAM,GAAG,EAAf;;IACA,KAAK,MAAM,CAACG,GAAD,EAAMhC,KAAN,CAAX,IAA2B0B,KAA3B,EAAkC;MAC9BG,MAAM,CAACE,IAAP,CAAY,CAACM,eAAe,CAAC;QACrBD,IAAI,EAAE,EADe;QAErBE,IAAI,EAAES;MAFe,CAAD,EAGrBf,GAHqB,CAAhB,EAGCK,eAAe,CAAC;QACrBD,IAAI,EAAE,EADe;QAErBE,IAAI,EAAEU,SAFe;QAGrBH,UAAU,EAAEV,KAAK,CAACU;MAHG,CAAD,EAIrB7C,KAJqB,CAHhB,CAAZ;IAQH;;IACD,OAAO6B,MAAP;EACH;AACJ"},"metadata":{},"sourceType":"script"}